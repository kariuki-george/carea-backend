generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  BUYER
  SUBADMIN
}

model addresses {
  id     Int      @id @default(autoincrement())
  details String   
  name    String   
  user  user @relation(fields: [userId], references: [id])
  userId Int
}

model user {
  id        Int @id @default(autoincrement())
  address   addresses[]
  email     String   
  firstName String?   
  lastName  String?   
  password  String    
  role      Role @default(BUYER)
  verified  Boolean?     @default(false)
  chats chat[]
  accessTokenVersion Int? @default(0)
  refreshTokenVersion Int? @default(0)

  @@unique([email])
}


//carea

enum CarCondition {
  NEW
  USED
}

model category {
  id      Int      @id @default(autoincrement())
  imageUrl String   @db.Text
  name     String     @unique
  cars    car[]


}

model review {
  id  Int   @id @default(autoincrement())
  rating Float?
  name String?   
  review String? 
  userId  String  
  car   car @relation(fields: [carId], references: [id])
  carId Int
}

model car {
  id        Int   @id @default(autoincrement())
  checkout   Boolean @default(false)
  condition  CarCondition @default(NEW)
  desc       String 
  gallery    String[]
  imageUrl   String   
  name       String   
  price      Int
  publish    Boolean @default(false)
  stock      Int
  category    category @relation(fields: [categoryId], references: [id])
  categoryId   Int  
  reviews      review[]
  chats chat[]
  offer offer?
  @@unique([name])
}

//orders

enum OfferStatus {
  ACCEPTED
  DECLINED
  PROCESSING
}

enum OrderStatus {
  PROCESSING
  DELIVERY
  COMPLETED
  CANCELLED
  REFUND
  UNPAID
}

model order {
   id      Int      @id @default(autoincrement())
   userId   String
   addressId    String
   status     OrderStatus @default(PROCESSING)
   carId  String
   offer offer? @relation(fields: [offerId],references: [id])
   offerId  Int @unique

}

model offer {
  id  Int      @id @default(autoincrement())
  status OfferStatus   @default(PROCESSING)
  amount Int
  userId String
  car car @relation(fields: [carId],references: [id])
  carId Int @unique
  valid Boolean @default(true)
 
   order order?
}

model chat {
    id  Int      @id @default(autoincrement())
    user user @relation(fields: [userId], references: [id])
    userId Int
    car  car @relation(fields: [carId], references: [id])
    carId   Int
    messages message[]
}

model message{
  id   Int      @id @default(autoincrement())
  userId Int 
  message String
  chat   chat   @relation(fields: [chatId], references: [id])
  chatId Int 
  createdAt DateTime @default(now())
}
